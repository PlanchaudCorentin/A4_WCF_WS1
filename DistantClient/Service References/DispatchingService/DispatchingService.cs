//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistantClient.DispatchingService
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MSG", Namespace="http://schemas.datacontract.org/2004/07/WCF_DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    public partial class MSG : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] DataTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppToken
        {
            get
            {
                return this.AppTokenField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AppTokenField, value) != true))
                {
                    this.AppTokenField = value;
                    this.RaisePropertyChanged("AppToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] DataTable
        {
            get
            {
                return this.DataTableField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataTableField, value) != true))
                {
                    this.DataTableField = value;
                    this.RaisePropertyChanged("DataTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpName
        {
            get
            {
                return this.OpNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OpNameField, value) != true))
                {
                    this.OpNameField = value;
                    this.RaisePropertyChanged("OpName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DistantClient.DispatchingService.IDispatching")]
    public interface IDispatching
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDispatching/dispatch", ReplyAction="http://tempuri.org/IDispatching/dispatchResponse")]
        DistantClient.DispatchingService.MSG dispatch(DistantClient.DispatchingService.MSG msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDispatching/dispatch", ReplyAction="http://tempuri.org/IDispatching/dispatchResponse")]
        System.Threading.Tasks.Task<DistantClient.DispatchingService.MSG> dispatchAsync(DistantClient.DispatchingService.MSG msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDispatchingChannel : DistantClient.DispatchingService.IDispatching, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DispatchingClient : System.ServiceModel.ClientBase<DistantClient.DispatchingService.IDispatching>, DistantClient.DispatchingService.IDispatching
    {
        
        public DispatchingClient()
        {
        }
        
        public DispatchingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public DispatchingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DispatchingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DispatchingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public DistantClient.DispatchingService.MSG dispatch(DistantClient.DispatchingService.MSG msg)
        {
            return base.Channel.dispatch(msg);
        }
        
        public System.Threading.Tasks.Task<DistantClient.DispatchingService.MSG> dispatchAsync(DistantClient.DispatchingService.MSG msg)
        {
            return base.Channel.dispatchAsync(msg);
        }
    }
}
